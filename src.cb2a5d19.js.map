{"version":3,"sources":["index.js"],"names":["btnParse","document","getElementById","btnTryAgain","inputField","resultField","switchActiveBtn","activeBtn","deactivateBtn","disabled","switchView","showField","hideField","hidden","parseData","getArrayURLs","value","match","sortedScreenshots","i","length","name","description","push","decodeURI","replace","url","renderResult","obj","key","details","createElement","summary","group","className","innerHTML","append","container","image","setAttribute","addEventListener","console","log"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,eAAe,eACnCC,EAAcF,SAASC,eAAe,kBACtCE,EAAaH,SAASC,eAAe,cACrCG,EAAcJ,SAASC,eAAe,eAEtCI,EAAkB,SAACC,EAAWC,GAClCD,EAAUE,UAAW,EACrBD,EAAcC,UAAW,GAGrBC,EAAa,SAACC,EAAWC,GAC7BD,EAAUE,QAAS,EACnBD,EAAUC,QAAS,GAGfC,EAAY,WAIX,IAHCC,IAAAA,EAAeX,EAAWY,MAAMC,MAAM,kBACtCC,EAAoB,GAEjBC,EAAI,EAAGA,EAAIJ,EAAaK,OAAQD,GAAK,EAAG,CACzCE,IAAAA,EAAON,EAAaI,GAAGF,MAAM,8BAA8B,GAC3DK,EAAcP,EAAaI,GAAGF,MAAM,kBAAkB,GAEvDC,EAAkBG,KACrBH,EAAkBG,GAAQ,IAG5BH,EAAkBG,GAAME,KAAK,CAAED,YAAaE,UAAUF,GAAaG,QAAQ,OAAQ,KAAMC,IAAKX,EAAaI,KAGtGD,OAAAA,GAGHS,EAAe,SAACC,GACfC,IAAAA,OAAOD,EAAK,CACTE,IAAAA,EAAU7B,SAAS8B,cAAc,WACjCC,EAAU/B,SAAS8B,cAAc,WACjCE,EAAQL,EAAIC,KAElBC,EAAQI,UAAY,UACpBF,EAAQE,UAAY,UAEpBF,EAAQG,UAAYN,IACpBC,EAAQM,OAAOJ,GAEV,IAAA,IAAIb,EAAI,EAAGA,EAAIc,EAAMb,OAAQD,GAAK,EAAG,CAClCkB,IAAAA,EAAYpC,SAAS8B,cAAc,OACnCT,EAAcrB,SAAS8B,cAAc,OACrCO,EAAQrC,SAAS8B,cAAc,OAErCM,EAAUH,UAAY,OACtBZ,EAAYY,UAAY,QACxBI,EAAMJ,UAAY,aAElBZ,EAAYa,UAAYF,EAAMd,GAAGG,YACjCe,EAAUD,OAAOd,GACjBgB,EAAMC,aAAa,MAAON,EAAMd,GAAGO,KACnCW,EAAUD,OAAOE,GAEjBR,EAAQM,OAAOC,GAGjBhC,EAAY+B,OAAON,KAIvB9B,EAASwC,iBAAiB,QAAS,WACjClC,EAAgBH,EAAaH,GAC7BU,EAAWL,EAAaD,GACxBuB,EAAab,KACb2B,QAAQC,IAAI5B,OAGdX,EAAYqC,iBAAiB,QAAS,WACpClC,EAAgBN,EAAUG,GAC1BO,EAAWN,EAAYC,GACvBD,EAAWY,MAAQ,GACnBX,EAAY8B,UAAY","file":"src.cb2a5d19.js","sourceRoot":"../src","sourcesContent":["const btnParse = document.getElementById('actionParse');\nconst btnTryAgain = document.getElementById('actionTruAgain');\nconst inputField = document.getElementById('inputField');\nconst resultField = document.getElementById('resultField');\n\nconst switchActiveBtn = (activeBtn, deactivateBtn) => {\n  activeBtn.disabled = false;\n  deactivateBtn.disabled = true;\n}\n\nconst switchView = (showField, hideField) => {\n  showField.hidden = false;\n  hideField.hidden = true;\n}\n\nconst parseData = () => {\n  const getArrayURLs = inputField.value.match(/https:.+\\.png/g);\n  const sortedScreenshots = {};\n\n  for (let i = 0; i < getArrayURLs.length; i += 1) {\n    const name = getArrayURLs[i].match(/test_screenshots\\/(.+)\\.ts/)[1];\n    const description = getArrayURLs[i].match(/\\%3E+(.+)\\.png/)[1];\n\n    if (!sortedScreenshots[name]) {\n      sortedScreenshots[name] = [];\n    };\n\n    sortedScreenshots[name].push({ description: decodeURI(description).replace(/%3A/g, '/'), url: getArrayURLs[i] });\n  }\n\n  return sortedScreenshots;\n}\n\nconst renderResult = (obj) => {\n  for (key in obj) {\n    const details = document.createElement('details');\n    const summary = document.createElement('summary');\n    const group = obj[key]\n\n    details.className = 'details';\n    summary.className = 'summary';\n\n    summary.innerHTML = key;\n    details.append(summary);\n\n    for (let i = 0; i < group.length; i += 1) {\n      const container = document.createElement('div');\n      const description = document.createElement('div');\n      const image = document.createElement('img');\n\n      container.className = 'item';\n      description.className = 'title';\n      image.className = 'screenshot';\n\n      description.innerHTML = group[i].description;\n      container.append(description);\n      image.setAttribute('src', group[i].url);\n      container.append(image);\n\n      details.append(container);\n    }\n\n    resultField.append(details);\n  }\n}\n\nbtnParse.addEventListener('click', () => {\n  switchActiveBtn(btnTryAgain, btnParse);\n  switchView(resultField, inputField);\n  renderResult(parseData())\n  console.log(parseData())\n})\n\nbtnTryAgain.addEventListener('click', () => {\n  switchActiveBtn(btnParse, btnTryAgain);\n  switchView(inputField, resultField);\n  inputField.value = '';\n  resultField.innerHTML = '';\n})\n"]}